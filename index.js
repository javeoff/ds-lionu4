const Discord = require('discord.js');
const client = new Discord.Client({ partials: ['MESSAGE', 'CHANNEL', 'REACTION'] });
const cheerio = require('cheerio');
const fetch = require('node-fetch');

const fs = require("fs");
prefix = "/";

client.on('ready', async () => {
 console.log(`–ë–æ—Ç ${client.user.tag} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!`);
 client.user.setActivity("—Å–µ—Ä–≤–µ—Ä CrazyZone", { type: 'WATCHING',  });

 setInterval(()=>{
  fetch("https://en.wikipedia.org/wiki/Template:2019%E2%80%9320_coronavirus_pandemic_data")
  .then(async response => { 
   response = await response.text();
   let $ = cheerio.load(response);
   let virus = $('#thetable tr th a:contains("Ukraine")').parents('tr').find($('td')).text().split("\n");
   console.log(virus)
   let cases = virus[0];
   let deaths = virus[1];
   let recov = virus[2];
   client.channels.cache.get('705006666545889300').setName("ü¶†üá∫üá¶ –ó–∞–±–æ–ª–µ–ª–∏: "+cases);
   client.channels.cache.get('705042176408551564').setName("üíäüá∫üá¶ –í—ã–ª–µ—á–µ–Ω–Ω—ã—Ö: "+recov);
   client.channels.cache.get('705098409555525636').setName("üíÄüá∫üá¶ –£–º–µ—Ä—à–∏—Ö: "+deaths);
  })
  .catch(error=>console.log('–æ—à–∏–±–∫–∞'+error))
 },360000)

 arr = [];
 let guild = await client.guilds.cache.first();
 let channel1 = guild.channels.cache.get('770818351433515048');
 let channel2 = guild.channels.cache.get('770818436342480928');

 setInterval(()=>{
  let count = guild.memberCount;
  let online = client.users.cache.filter(m => m.presence.status === "offline").array().length;
  
  console.log(count, online);
  channel1.setName("üë• –õ—é–¥–µ–π –Ω–∞ —Å–µ—Ä–≤–µ: "+count);
  channel2.setName("üí¨ –û–Ω–ª–∞–π–Ω: "+online);
 },5000)
});

role_data = {
 'üëæ':'573277653579071518',
 '‚ö°':'573275890734202882',
 'üî∞':'573277297881382922',
 'üöî':'573276796326510605',
 'üçÄ':'573276530810290220',
 'üöÄ':'573277028837621844',
 'üî∏':'637247244604801028'
}

client.on('messageReactionAdd',async(reaction,user)=>{
 if (reaction.message.partial) await reaction.message.fetch();
 if (reaction.partial) await reaction.fetch();

 for (let [smile, role] of Object.entries(role_data)) {
  if (reaction.emoji.name == smile) {
   role = reaction.message.guild.roles.cache.find(r => r.id === role)
   let member = reaction.message.guild.members.cache.find(member => member.id === user.id)
   await member.roles.add(role);
  }
}
})

client.on('messageReactionRemove',async(reaction,user)=>{
 if (reaction.message.partial) await reaction.message.fetch();
 if (reaction.partial) await reaction.fetch();

 for (let [smile, role] of Object.entries(role_data)) {
  if (reaction.emoji.name == smile) {
   role = reaction.message.guild.roles.cache.find(r => r.id === role)
   let member = reaction.message.guild.members.cache.find(member => member.id === user.id)
   await member.roles.remove(role);
  }
}
})

function random(min, max) {
 return Math.floor(Math.random() * (max - min) + min);
}

client.on('message', msg => {
function setCard(text,color) {
 let embed = new Discord.MessageEmbed()
 .setColor(color)
 .setDescription(text);
 msg.channel.send(embed)
}

 if (msg.author.bot) return
 data = msg.content.split(' ');
 cmd = {};
 cmd.prefix = data[0];
 cmd.start = data[0].slice(prefix.length).trim();
 cmd.args = data.slice(1);
 
 if (cmd.start == "knb") {
  replies = ["–ë—É–º–∞–≥–∞","–ö–∞–º–µ–Ω—å","–ù–æ–∂–Ω–∏—Ü—ã"]
  msg.channel.send(replies[random(0,replies.length)]);
 }

 if (cmd.start == "random") {
  let err = 0;
  cmd.args.forEach((el,i)=>{
   if (/@/.test(el)) err += 1;
  })
  cmd.args = cmd.args.filter(x => x !== "");
  if (cmd.args.length < 2 && err < 2) {
   msg.reply('–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—è @(–ª–æ–≥–∏–Ω)');
  }
  else if (cmd.args.length >= 2) {
   msg.channel.send('–†–∞–Ω–¥–æ–º –≤—ã–±—Ä–∞–ª: '+cmd.args[random(0,cmd.args.length)])
  }
 }

 if (cmd.start == "roll") {
  if (cmd.args[0] && cmd.args[1]) {
   msg.reply('–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - **'+random(parseInt(cmd.args[0]),parseInt(cmd.args[1]))+'**')
  }
  else msg.channel.send('–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - **'+random(1,100)+'**')
 }

 if (cmd.start == 'roles') {
  setCard(`
  :exclamation:**–î–æ—Ä–æ–≥–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —Ç—ã–∫–Ω—É—Ç—å –Ω–∞ —Å–º–∞–π–ª–∏–∫ –∂–µ–ª–∞–µ–º–æ–π —Ä–æ–ª–∏ –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º**\n

  :space_invader: - –†–æ–ª—å "–ì–µ–π–º–µ—Ä" –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∏–≥—Ä–æ–≤—ã–º –≤–æ–π—Å–∞–º –∞ —Ç–∞–∫-–∂–µ –∫ "–ß–µ–±—É—Ä–µ—á–Ω–æ–π"\n 
  :no_entry:–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –¥–∞—é—Ç –¥–æ—Å—Ç—É–ø –∫ –≤–æ–π—Å–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∏–≥—Ä–µ\n
  :zap: - –†–æ–ª—å "CSGO"\n
  :beginner: - –†–æ–ª—å "–ü–∞–±–≥–µ—Ä" \n
  :oncoming_police_car: - –†–æ–ª—å "GtaV" \n
  :four_leaf_clover: - –†–æ–ª—å "–î–æ—Ç–µ—Ä" \n
  :rocket:- –†–æ–ª—å "SAMP" \n
  :small_orange_diamond:- –†–æ–ª—å "Roblox"\n
  `,'#FFFFFF')
 }
});

client.login('NzA0ODIzNjQ2Mjc0NzE1NzA5.XqiwmQ.BVA-VlWaG280vKz-mFR43TPBLVs');